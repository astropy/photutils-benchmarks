{
    "benchmarks": {
        "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_bg_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_bg_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_bg_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_sm_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_sm_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_sm_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_bg_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_bg_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_bg_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_sm_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_sm_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_sm_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_circular_big_exact": {
            "code": "def time_circular_big_exact():\n    circular_overlap_grid(-4., 4., -4., 4., 100, 100, 3.,\n                          use_exact=1, subpixels=1)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_circular_big_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_circular_big_subpixel_1": {
            "code": "def time_circular_big_subpixel_1():\n    circular_overlap_grid(-4., 4., -4., 4., 100, 100, 3.,\n                          use_exact=0, subpixels=1)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_circular_big_subpixel_1", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_circular_big_subpixel_5": {
            "code": "def time_circular_big_subpixel_5():\n    circular_overlap_grid(-4., 4., -4., 4., 100, 100, 3.,\n                          use_exact=1, subpixels=5)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_circular_big_subpixel_5", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_circular_small_exact": {
            "code": "def time_circular_small_exact():\n    circular_overlap_grid(-4., 4., -4., 4., 10, 10, 3.,\n                          use_exact=1, subpixels=1)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_circular_small_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_circular_small_subpixel_1": {
            "code": "def time_circular_small_subpixel_1():\n    circular_overlap_grid(-4., 4., -4., 4., 10, 10, 3.,\n                          use_exact=0, subpixels=1)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_circular_small_subpixel_1", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_circular_small_subpixel_5": {
            "code": "def time_circular_small_subpixel_5():\n    circular_overlap_grid(-4., 4., -4., 4., 10, 10, 3.,\n                          use_exact=1, subpixels=5)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_circular_small_subpixel_5", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_elliptical_big_exact": {
            "code": "def time_elliptical_big_exact():\n    elliptical_overlap_grid(-4., 4., -4., 4., 100, 100, 3., 2., 1.,\n                            use_exact=1, subpixels=1)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_elliptical_big_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_elliptical_big_subpixel_1": {
            "code": "def time_elliptical_big_subpixel_1():\n    elliptical_overlap_grid(-4., 4., -4., 4., 100, 100, 3., 2., 1.,\n                            use_exact=0, subpixels=1)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_elliptical_big_subpixel_1", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_elliptical_big_subpixel_5": {
            "code": "def time_elliptical_big_subpixel_5():\n    elliptical_overlap_grid(-4., 4., -4., 4., 100, 100, 3., 2., 1.,\n                            use_exact=1, subpixels=5)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_elliptical_big_subpixel_5", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_elliptical_small_exact": {
            "code": "def time_elliptical_small_exact():\n    elliptical_overlap_grid(-4., 4., -4., 4., 10, 10, 3., 2., 1.,\n                            use_exact=1, subpixels=1)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_elliptical_small_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_elliptical_small_subpixel_1": {
            "code": "def time_elliptical_small_subpixel_1():\n    elliptical_overlap_grid(-4., 4., -4., 4., 10, 10, 3., 2., 1.,\n                            use_exact=0, subpixels=1)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_elliptical_small_subpixel_1", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_elliptical_small_subpixel_5": {
            "code": "def time_elliptical_small_subpixel_5():\n    elliptical_overlap_grid(-4., 4., -4., 4., 10, 10, 3., 2., 1.,\n                            use_exact=1, subpixels=5)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_elliptical_small_subpixel_5", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }
    }, 
    "date_to_hash": {
        "1408645022000": "21010e8a", 
        "1408704692000": "d032c703", 
        "1409102386000": "201f0468", 
        "1409133713000": "8ddff20f", 
        "1409318750000": "1bf7a544", 
        "1409318895000": "d7dbb4c6", 
        "1409356530000": "e2972eb3", 
        "1409629070000": "e68f2c20", 
        "1409669856000": "c3e41c66", 
        "1409669873000": "febb0d21", 
        "1409671064000": "d3b657e7", 
        "1409692366000": "d328253f", 
        "1409842968000": "52b4d68f", 
        "1409851078000": "45d90e0e", 
        "1409854139000": "633f0bba", 
        "1409855475000": "64159074", 
        "1409864031000": "b091e0ff", 
        "1409930320000": "29d3bc82", 
        "1409960836000": "19a564f0", 
        "1409960882000": "b75c4a19", 
        "1410471165000": "ab5e3c3a", 
        "1410541006000": "7810d6d7", 
        "1410763676000": "1ffdec21", 
        "1410766485000": "042ec7ce", 
        "1410778405000": "9166e164", 
        "1410791979000": "bd9d416f", 
        "1410891650000": "56218b04", 
        "1410921665000": "0645befe", 
        "1410953690000": "1facd50f", 
        "1410953745000": "8840e72e", 
        "1410956732000": "f01c3531", 
        "1411399495000": "a432c9f2", 
        "1411415471000": "66c58bdc", 
        "1411573512000": "16d242d9", 
        "1411741941000": "d03b4035", 
        "1412089214000": "55e57dd6", 
        "1412098605000": "89b8d43b", 
        "1412099467000": "f680691a", 
        "1412101162000": "de29294f", 
        "1412102710000": "a9081985", 
        "1412105558000": "3ef8cef2", 
        "1412106268000": "17542cf9", 
        "1412106692000": "9ee13544", 
        "1412109033000": "6a4d8b8f", 
        "1412110453000": "b861fd88", 
        "1412132931000": "31068918", 
        "1412134492000": "931fdca8", 
        "1412136562000": "1fbddafc", 
        "1412136580000": "5d6447df", 
        "1412184021000": "dd58c079", 
        "1412184300000": "23020a8c", 
        "1412187486000": "51f093f7", 
        "1412188005000": "370eec08", 
        "1412189154000": "5722ab65", 
        "1412273713000": "9c1a30b1", 
        "1412274300000": "07b6263f", 
        "1412275526000": "60aca650", 
        "1412275559000": "9aa83258", 
        "1412275602000": "be977746", 
        "1412365580000": "7787eeee", 
        "1412366712000": "f7c1755c", 
        "1412372915000": "b02f6cbe", 
        "1412379971000": "8173e554", 
        "1412620341000": "643201ac", 
        "1412794010000": "9e208ee0", 
        "1412794398000": "3dbdb054", 
        "1412799281000": "d6383870", 
        "1412799556000": "443938b9", 
        "1412808656000": "f9c31ff8", 
        "1412810484000": "a5dac9cb", 
        "1412877978000": "5cd937c6", 
        "1412881005000": "0284c4aa", 
        "1412953836000": "fb1a6606", 
        "1412955444000": "20627314", 
        "1413212822000": "e8017dbe", 
        "1413230623000": "7b893693", 
        "1413231644000": "ef40429d", 
        "1413232700000": "014531e7", 
        "1413304272000": "974b819b", 
        "1413314893000": "0bb986ef", 
        "1413316577000": "570f0ecc", 
        "1413317882000": "345e7a70", 
        "1413550421000": "c5a69ac6", 
        "1413584398000": "cc534b37", 
        "1413924084000": "48181e8c", 
        "1413925302000": "e3e4be06", 
        "1414005345000": "a64dfe44", 
        "1414049762000": "c414eaa0", 
        "1414095789000": "d804caa3", 
        "1414169478000": "ca7bd687", 
        "1414169874000": "fa6ed0ea", 
        "1414173609000": "95fa366f", 
        "1414175431000": "8fbdc819", 
        "1414176085000": "13dab81a", 
        "1414186417000": "0730acbe", 
        "1414230477000": "72f2a57b", 
        "1414424900000": "b458f31a", 
        "1414436002000": "f2404f0c", 
        "1414437571000": "9d91a268", 
        "1414702440000": "3fa935a5", 
        "1414702451000": "5b6338ec", 
        "1414774179000": "927555c0", 
        "1414774673000": "617f6398", 
        "1414775063000": "c802fba3", 
        "1414776686000": "f5f69b8a", 
        "1414777012000": "7e50e256", 
        "1414777507000": "298923d3", 
        "1414782655000": "9fadf4ca", 
        "1414783751000": "fe076c6a", 
        "1414785079000": "67d49e4f", 
        "1414789163000": "99eecfd6", 
        "1415139197000": "5672729e", 
        "1415139265000": "4ccb9f12", 
        "1415143933000": "550604f0", 
        "1415144706000": "ff47d74a", 
        "1415230806000": "832b9037", 
        "1415232689000": "148123ec", 
        "1415235845000": "633bf9ad", 
        "1415730007000": "5be81183", 
        "1415739375000": "47e87e18", 
        "1415739467000": "9dffd3de", 
        "1416346423000": "d7a2754b", 
        "1416595061000": "f56fd0f0", 
        "1416844637000": "a5e0e209", 
        "1417167815000": "865c91a0", 
        "1417169476000": "3cae9cbb", 
        "1417341813000": "038844ee", 
        "1417638732000": "f78c9f20", 
        "1417640215000": "64304ab3", 
        "1417647307000": "d40d457d", 
        "1417731783000": "1c6f4c64", 
        "1418153508000": "65bbe55e", 
        "1418186482000": "2ddf24a6", 
        "1418209168000": "c9d950be", 
        "1418248750000": "721effb7", 
        "1418324168000": "f2db3e96", 
        "1418415941000": "3a0f9c91", 
        "1418418226000": "6823e871", 
        "1418638251000": "e9bd5158", 
        "1418641497000": "436ceb5f", 
        "1418658886000": "5a7519c0", 
        "1418704799000": "d1a40fb6", 
        "1418707309000": "d8caafdf", 
        "1418724476000": "6d996c79", 
        "1418739227000": "ed2f7e2f", 
        "1418764711000": "b6e64f67", 
        "1418842859000": "ccb8eb5c", 
        "1418845412000": "56b5d958", 
        "1418849109000": "2f13122c", 
        "1418849347000": "22850eba", 
        "1418849619000": "609afa7b", 
        "1418850163000": "027091d1", 
        "1418850481000": "2b4771af", 
        "1418850677000": "d3a30d37", 
        "1418850797000": "4ac6c928", 
        "1418850932000": "fe690b7f", 
        "1418851152000": "60c89df2", 
        "1418851551000": "a7ed5992", 
        "1418852870000": "00e8d435", 
        "1418853090000": "c44cecb6", 
        "1418905493000": "a635cf52", 
        "1418927916000": "85d90a88", 
        "1418927937000": "c20361aa", 
        "1419006139000": "87b2430a", 
        "1419039213000": "b2ad1382", 
        "1419043930000": "c9caf3e9", 
        "1419052225000": "79f3aab0", 
        "1419053727000": "07fd51df", 
        "1419185118000": "37cc2b27", 
        "1419186071000": "89e93848", 
        "1419209553000": "937fc1cc", 
        "1419210694000": "c07ae2bf", 
        "1419217287000": "f44dbc99", 
        "1419221778000": "17f90aa2", 
        "1419222372000": "8ab59df5", 
        "1419222428000": "f2bbba16", 
        "1419244626000": "c0301541", 
        "1419244690000": "b38cb704", 
        "1419360854000": "ea959d13", 
        "1419553263000": "622fecb2", 
        "1419553509000": "8fc973dc", 
        "1419809815000": "26ac2a90", 
        "1420458433000": "26ed0a77", 
        "1420489705000": "51fe21b4", 
        "1421171365000": "6b9e2a85", 
        "1421178822000": "9f15a689", 
        "1421574546000": "6a23d46b", 
        "1421811471000": "5c1c581b", 
        "1421850974000": "abd83622", 
        "1421853136000": "371b65a7", 
        "1421877136000": "d470b763", 
        "1421961356000": "aba0d720", 
        "1421961543000": "fb6dcf2f", 
        "1422027863000": "c203fcbc", 
        "1422047758000": "5698c3b2", 
        "1422304205000": "ee0bb423", 
        "1422414820000": "de4ba46b", 
        "1422478291000": "73dd4ed4", 
        "1422562913000": "689f1c51", 
        "1422979744000": "8f483fdb", 
        "1422984868000": "bf85c728", 
        "1422989832000": "bc24b469", 
        "1423718302000": "29420932", 
        "1423753864000": "768f03d6", 
        "1424719520000": "4b491312", 
        "1424897992000": "b52c1304", 
        "1425935508000": "0e7dc637", 
        "1425975155000": "8d879d5d", 
        "1426099889000": "0e7d8c99", 
        "1426126451000": "ad6fcae9", 
        "1426797475000": "698950ad", 
        "1428232654000": "2fc19570", 
        "1428429905000": "d6b429b4", 
        "1428433312000": "f88fc05e", 
        "1430143032000": "16f4b382", 
        "1430155587000": "57a7cf25", 
        "1430296484000": "478bf7f1", 
        "1430769098000": "db575b4f", 
        "1430943488000": "0e14b4e7", 
        "1431455936000": "e0747099", 
        "1432253770000": "2215b820", 
        "1432688243000": "2c89b91b", 
        "1433535354000": "6489a7f6", 
        "1436040304000": "1135c684", 
        "1436270112000": "65bde24b", 
        "1436800187000": "c348d6be", 
        "1437188884000": "a65a43e6", 
        "1437662947000": "a28de913", 
        "1437742767000": "15e90633", 
        "1443060550000": "d070220b", 
        "1444663420000": "57255048", 
        "1444668124000": "e22715e6", 
        "1444863895000": "7be3b2c9", 
        "1446664844000": "0458ada8", 
        "1448216578000": "0a4a1735", 
        "1448544714000": "14335513", 
        "1449290739000": "e6b02d6c", 
        "1449672477000": "904a2253", 
        "1449672489000": "492dd368", 
        "1449672643000": "bae6c380", 
        "1449687158000": "888ef612", 
        "1449693401000": "eb0af1bd", 
        "1449693975000": "0064f856", 
        "1449712784000": "ce384a66", 
        "1449713783000": "23f47400", 
        "1449713941000": "fc94da67", 
        "1449759305000": "b326aa47", 
        "1449763798000": "65628211", 
        "1449867960000": "b7bc5552", 
        "1449868639000": "c3f0a40d", 
        "1449879506000": "bf595715", 
        "1449891065000": "301145af", 
        "1449893205000": "5f186534", 
        "1450103465000": "aecb5890", 
        "1450103577000": "1d8ae99b", 
        "1450367801000": "6783369d", 
        "1450374324000": "c2434b35", 
        "1450376279000": "0fb68f6f", 
        "1450376298000": "3c797b1d", 
        "1450378153000": "47e1957a", 
        "1450379750000": "b8952a7a", 
        "1450398210000": "7e6dd03c", 
        "1451309771000": "a533991d", 
        "1451316803000": "851dd73c", 
        "1451325313000": "cf56ccdb", 
        "1451539719000": "ce00ab9c", 
        "1451539757000": "046a580a", 
        "1451539999000": "d2f47c56", 
        "1451540367000": "b31599f8", 
        "1451579076000": "c48898c1", 
        "1451581775000": "90c050be", 
        "1451582143000": "de6dd81a", 
        "1451582584000": "b8fd2474", 
        "1451582867000": "0dc4bbac", 
        "1451583521000": "672d3638", 
        "1451584181000": "8223fd17", 
        "1451584420000": "b8fa96b2", 
        "1451584522000": "362d52f5", 
        "1451591964000": "6a8af565", 
        "1451840692000": "0016ff1f", 
        "1452707168000": "a18df4af", 
        "1452713415000": "b391a5e1", 
        "1452713428000": "881622c1", 
        "1452713607000": "a003c4b7", 
        "1452883410000": "1e6c71da", 
        "1452883541000": "0d9fb602", 
        "1452883558000": "d764314d", 
        "1452885004000": "d00eac74", 
        "1452885146000": "798af313", 
        "1452894750000": "84220789", 
        "1454006852000": "ba6cfdf7", 
        "1454630906000": "b583fb69", 
        "1455811883000": "880529d1", 
        "1455908786000": "c4bcb6bc", 
        "1455920007000": "11fb2233", 
        "1455920316000": "87155aff", 
        "1456189651000": "4ee6ee2d", 
        "1456190891000": "deeb4ee3", 
        "1456322792000": "5fc3c92f", 
        "1456417205000": "9561de80", 
        "1457102722000": "cc746427", 
        "1457623525000": "0a3e2569", 
        "1458699415000": "0e382ab1", 
        "1459178600000": "035099d4", 
        "1459179287000": "20f104f0", 
        "1459179291000": "06a850ed", 
        "1459188600000": "88f778f5", 
        "1459191215000": "8f3621c1", 
        "1459533682000": "ff929057", 
        "1459980779000": "391d79ec", 
        "1461765054000": "71828453", 
        "1462804185000": "d2bad99a", 
        "1464477058000": "f1cf6bc6", 
        "1464728780000": "15245524", 
        "1464799371000": "7ffc2841", 
        "1464810823000": "884e2d46", 
        "1464890952000": "7099d593", 
        "1464907001000": "54697c10", 
        "1464973619000": "6fcf3dae", 
        "1465404908000": "0f31b4d0", 
        "1465498062000": "96c2d32c"
    }, 
    "machines": {
        "tom-mac-mini": {
            "arch": "x86_64", 
            "cpu": "Intel(R) Core(TM) i5-2415M CPU @ 2.30GHz", 
            "machine": "tom-mac-mini", 
            "os": "MacOS X 10.8", 
            "ram": 8589934592, 
            "version": 1
        }
    }, 
    "params": {
        "Cython": [
            null
        ], 
        "arch": [
            "x86_64"
        ], 
        "astropy": [
            "0.4.1", 
            "1.0.1"
        ], 
        "cpu": [
            "Intel(R) Core(TM) i5-2415M CPU @ 2.30GHz"
        ], 
        "machine": [
            "tom-mac-mini"
        ], 
        "numpy": [
            "1.8", 
            "1.9"
        ], 
        "os": [
            "MacOS X 10.8"
        ], 
        "python": [
            "2.7"
        ], 
        "ram": [
            8589934592
        ]
    }, 
    "project": "photutils", 
    "project_url": "http://photutils.readthedocs.org", 
    "show_commit_url": "http://github.com/astropy/photutils/commit/", 
    "tags": {
        "v0.1": 1419222372000, 
        "v0.2": 1451584420000, 
        "v0.2.1": 1452894066000
    }
}