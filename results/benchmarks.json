{
    "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_mult_bg_ap_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_mult_bg_ap_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_mult_bg_ap_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_mult_sm_ap_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_mult_sm_ap_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_mult_sm_ap_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_sing_bg_ap_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_sing_bg_ap_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_sing_bg_ap_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_sing_sm_ap_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_sing_sm_ap_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.CircularAperturePhotometry.time_sing_sm_ap_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_exact": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_subpixel_01": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_subpixel_01", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_subpixel_05": {
        "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
        "goal_time": 2.0, 
        "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_subpixel_05", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 120.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "geometry.time_circular_big_exact": {
        "code": "def time_circular_big_exact():\n    circular_overlap_grid(-4., 4., -4., 4., 100, 100, 3.,\n                          use_exact=1, subpixels=1)\n", 
        "goal_time": 2.0, 
        "name": "geometry.time_circular_big_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "geometry.time_circular_big_subpixel_1": {
        "code": "def time_circular_big_subpixel_1():\n    circular_overlap_grid(-4., 4., -4., 4., 100, 100, 3.,\n                          use_exact=0, subpixels=1)\n", 
        "goal_time": 2.0, 
        "name": "geometry.time_circular_big_subpixel_1", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "geometry.time_circular_big_subpixel_5": {
        "code": "def time_circular_big_subpixel_5():\n    circular_overlap_grid(-4., 4., -4., 4., 100, 100, 3.,\n                          use_exact=1, subpixels=5)\n", 
        "goal_time": 2.0, 
        "name": "geometry.time_circular_big_subpixel_5", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "geometry.time_circular_small_exact": {
        "code": "def time_circular_small_exact():\n    circular_overlap_grid(-4., 4., -4., 4., 10, 10, 3.,\n                          use_exact=1, subpixels=1)\n", 
        "goal_time": 2.0, 
        "name": "geometry.time_circular_small_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "geometry.time_circular_small_subpixel_1": {
        "code": "def time_circular_small_subpixel_1():\n    circular_overlap_grid(-4., 4., -4., 4., 10, 10, 3.,\n                          use_exact=0, subpixels=1)\n", 
        "goal_time": 2.0, 
        "name": "geometry.time_circular_small_subpixel_1", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "geometry.time_circular_small_subpixel_5": {
        "code": "def time_circular_small_subpixel_5():\n    circular_overlap_grid(-4., 4., -4., 4., 10, 10, 3.,\n                          use_exact=1, subpixels=5)\n", 
        "goal_time": 2.0, 
        "name": "geometry.time_circular_small_subpixel_5", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "geometry.time_elliptical_big_exact": {
        "code": "def time_elliptical_big_exact():\n    elliptical_overlap_grid(-4., 4., -4., 4., 100, 100, 3., 2., 1.,\n                            use_exact=1, subpixels=1)\n", 
        "goal_time": 2.0, 
        "name": "geometry.time_elliptical_big_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "geometry.time_elliptical_big_subpixel_1": {
        "code": "def time_elliptical_big_subpixel_1():\n    elliptical_overlap_grid(-4., 4., -4., 4., 100, 100, 3., 2., 1.,\n                            use_exact=0, subpixels=1)\n", 
        "goal_time": 2.0, 
        "name": "geometry.time_elliptical_big_subpixel_1", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "geometry.time_elliptical_big_subpixel_5": {
        "code": "def time_elliptical_big_subpixel_5():\n    elliptical_overlap_grid(-4., 4., -4., 4., 100, 100, 3., 2., 1.,\n                            use_exact=1, subpixels=5)\n", 
        "goal_time": 2.0, 
        "name": "geometry.time_elliptical_big_subpixel_5", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "geometry.time_elliptical_small_exact": {
        "code": "def time_elliptical_small_exact():\n    elliptical_overlap_grid(-4., 4., -4., 4., 10, 10, 3., 2., 1.,\n                            use_exact=1, subpixels=1)\n", 
        "goal_time": 2.0, 
        "name": "geometry.time_elliptical_small_exact", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "geometry.time_elliptical_small_subpixel_1": {
        "code": "def time_elliptical_small_subpixel_1():\n    elliptical_overlap_grid(-4., 4., -4., 4., 10, 10, 3., 2., 1.,\n                            use_exact=0, subpixels=1)\n", 
        "goal_time": 2.0, 
        "name": "geometry.time_elliptical_small_subpixel_1", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "geometry.time_elliptical_small_subpixel_5": {
        "code": "def time_elliptical_small_subpixel_5():\n    elliptical_overlap_grid(-4., 4., -4., 4., 10, 10, 3., 2., 1.,\n                            use_exact=1, subpixels=5)\n", 
        "goal_time": 2.0, 
        "name": "geometry.time_elliptical_small_subpixel_5", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "version": 1
}